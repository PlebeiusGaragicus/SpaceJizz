import sys
import pygame


# Create a dictionary to store letter data
letterdata = {
    ' ': [],
    # '!': [(1, 0, 1, 1), (1, 1, 1, 2)],
    '!': [(1, 0, 1, 4), (1, 5, 1, 6)],
    '"': [(0, 0, 0, 1), (2, 0, 2, 1)],
    "#": [(1, 0, 1, 6), (3, 0, 3, 6), (0, 2, 4, 2), (0, 4, 4, 4)],
    "$": [(0, 1, 0, 3), (0, 3, 4, 3), (4, 3, 4, 5), (4, 5, 0, 5), (0, 1, 4, 1), (2, 0, 2, 6)],
    "%": [(3, 0, 1, 6), (1, 1, 1, 2), (3, 4, 3, 5)],
    "&": [(0, 1, 4, 5), (0, 1, 1, 0), (1, 0, 2, 1), (2, 1, 0, 4), (0, 4, 2, 6), (2, 6, 4, 4)],
    "'": [(3, 1, 2, 2)],
    "(": [(3, 0, 1, 2), (1, 2, 1, 4), (1, 4, 3, 6)],
    ")": [(1, 0, 3, 2), (3, 2, 3, 4), (3, 4, 1, 6)],
    "*": [(1, 1, 3, 5), (1, 5, 3, 1), (0, 3, 4, 3)],
    "+": [(2, 2, 2, 4), (1, 3, 3, 3)],
    ",": [(2, 5, 2, 6)],
    "-": [(1, 3, 3, 3)],
    ".": [(2, 5, 2, 5)],
    "/": [(4, 0, 0, 6)],
    "0": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 0), (4, 0, 0, 0)],
    "1": [(2, 0, 2, 6)],
    "2": [(0, 0, 4, 0), (4, 0, 4, 3), (4, 3, 0, 3), (0, 3, 0, 6), (0, 6, 4, 6)],
    "3": [(0, 0, 4, 0), (4, 0, 4, 6), (4, 6, 0, 6), (2, 3, 4, 3)],
    "4": [(0, 0, 0, 3), (0, 3, 4, 3), (4, 0, 4, 6)],
    "5": [(0, 0, 4, 0), (0, 0, 0, 3), (0, 3, 4, 3), (4, 3, 4, 6), (0, 6, 4, 6)],
    "6": [(0, 0, 0, 6), (0, 6, 4, 6), (0, 3, 4, 3), (4, 3, 4, 6), (0, 6, 4, 6)],
    "7": [(0, 0, 4, 0), (4, 0, 4, 6)],
    "8": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 0), (4, 0, 0, 0), (0, 3, 4, 3)],
    "9": [(0, 0, 4, 0), (4, 0, 4, 6), (4, 0, 4, 6), (0, 0, 0, 3), (0, 3, 4, 3)],
    ":": [(2, 1, 2, 1), (2, 5, 2, 5)],
    ";": [(2, 1, 2, 1), (2, 5, 2, 6)],
    "<": [(4, 0, 1, 3), (1, 3, 4, 6)],
    "=": [(1, 2, 3, 2), (1, 4, 3, 4)],
    ">": [(0, 0, 3, 3), (3, 3, 0, 6)],
    "?": [(1, 1, 1, 0), (1, 0, 3, 0), (3, 0, 3, 2), (3, 2, 2, 3), (2, 3, 2, 4), (2, 5, 2, 6)],
    "@": [(2, 2, 2, 4), (2, 4, 4, 4), (4, 4, 4, 0), (4, 0, 0, 0), (0, 0, 0, 6), (0, 6, 4, 6)],
    "A": [(2, 0, 0, 2), (2, 0, 4, 2), (0, 2, 0, 6), (4, 2, 4, 6), (0, 3, 4, 3)],
    "B": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 3), (4, 3, 0, 3), (0, 0, 3, 0), (3, 0, 3, 6)],
    "C": [(0, 0, 0, 6), (0, 6, 4, 6), (0, 0, 4, 0)],
    "D": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 0), (0, 0, 4, 0)],
    "E": [(4, 0, 0, 0), (0, 0, 0, 6), (0, 6, 4, 6), (0, 3, 3, 3)],
    "F": [(0, 0, 0, 6), (0, 0, 4, 0), (0, 3, 3, 3)],
    "G": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 0), (4, 0, 2, 0), (2, 0, 2, 3)],
    "H": [(0, 0, 0, 6), (0, 3, 4, 3), (4, 0, 4, 6)],
    "I": [(0, 0, 4, 0), (2, 0, 2, 6), (0, 6, 4, 6)],
    "J": [(0, 0, 4, 0), (4, 0, 4, 6), (2, 6, 2, 3)],
    "K": [(0, 0, 0, 6), (4, 0, 0, 3), (0, 3, 4, 6)],
    "L": [(0, 0, 0, 6), (0, 6, 4, 6)],
    "M": [(0, 0, 0, 6), (0, 0, 4, 3), (4, 0, 0, 6)],
    "N": [(0, 0, 0, 6), (0, 6, 4, 0), (4, 0, 4, 6)],
    "O": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 0), (4, 0, 0, 0)],
    "P": [(0, 0, 0, 6), (0, 0, 4, 0), (4, 0, 4, 3), (0, 3, 0, 6)],
    "Q": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 0), (4, 0, 0, 0), (2, 2, 4, 4)],
    "R": [(0, 0, 0, 6), (0, 0, 4, 0), (4, 0, 4, 3), (0, 3, 0, 6), (2, 3, 4, 6)],
    "S": [(4, 0, 0, 0), (0, 0, 0, 3), (0, 3, 4, 3), (4, 3, 4, 6), (0, 6, 4, 6)],
    "T": [(0, 0, 4, 0), (2, 0, 2, 6)],
    "U": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 0)],
    "V": [(0, 0, 2, 6), (2, 6, 4, 0)],
    "W": [(0, 0, 0, 6), (0, 6, 2, 0), (2, 0, 2, 6), (2, 6, 4, 0)],
    "X": [(0, 0, 4, 6), (4, 0, 0, 6)],
    "Y": [(0, 0, 2, 3), (2, 3, 4, 6), (2, 3, 2, 6)],
    "Z": [(0, 0, 4, 0), (4, 0, 0, 6), (0, 6, 4, 6)],
    "[": [(0, 0, 2, 0), (2, 0, 2, 6), (0, 6, 2, 6)],
    "\\": [(4, 0, 0, 6)],
    "]": [(0, 0, 2, 0), (2, 0, 2, 6), (0, 6, 2, 6)],
    "^": [(0, 0, 2, 3), (2, 3, 4, 0)],
    "_": [(0, 6, 4, 6)],
    "`": [(2, 0, 3, 1)],
    "a": [(4, 3, 4, 6), (4, 6, 0, 6), (0, 6, 0, 3), (0, 3, 4, 3)],
    "b": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 3), (4, 3, 0, 3)],
    "c": [(4, 3, 4, 6), (4, 6, 0, 6), (0, 6, 0, 0)],
    "d": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 3), (4, 3, 0, 3)],
    "e": [(0, 6, 4, 6), (4, 6, 4, 0), (0, 6, 0, 0), (0, 0, 4, 0), (4, 3, 2, 3)],
    "f": [(4, 0, 2, 0), (2, 0, 2, 6), (0, 3, 4, 3)],
    "g": [(4, 3, 4, 6), (4, 6, 0, 6), (0, 6, 0, 0), (0, 0, 4, 0), (0, 3, 2, 3), (2, 3, 4, 4)],
    "h": [(0, 0, 0, 6), (4, 0, 4, 6), (0, 3, 4, 3)],
    "i": [(2, 0, 2, 6)],
    "j": [(0, 0, 4, 0), (4, 0, 4, 6), (2, 6, 2, 3)],
    "k": [(0, 0, 0, 6), (4, 0, 0, 3), (2, 3, 4, 6)],
    "l": [(0, 0, 0, 6), (0, 6, 4, 6)],
    "m": [(0, 0, 0, 6), (4, 0, 4, 6), (0, 0, 2, 3), (4, 0, 2, 3)],
    "n": [(0, 0, 0, 6), (4, 0, 4, 6), (0, 0, 4, 6)],
    "o": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 0), (0, 0, 0, 0)],
    "p": [(0, 0, 0, 6), (0, 0, 4, 3), (4, 3, 4, 6), (0, 3, 0, 3)],
    "q": [(0, 0, 0, 6), (0, 6, 4, 3), (4, 3, 4, 0), (0, 3, 0, 3)],
    "r": [(0, 0, 0, 6), (4, 0, 4, 6)],
    "s": [(4, 0, 0, 0), (0, 0, 0, 3), (0, 3, 4, 3), (4, 3, 4, 6), (0, 6, 4, 6)],
    "t": [(2, 0, 2, 6), (0, 3, 4, 3)],
    "u": [(0, 0, 0, 6), (0, 6, 4, 6), (4, 6, 4, 0), (0, 0, 4, 0)],
    "v": [(0, 0, 2, 6), (2, 6, 4, 0)],
    "w": [(0, 0, 0, 6), (0, 6, 2, 0), (2, 0, 2, 6), (2, 6, 4, 0)],
    "x": [(0, 0, 4, 6), (4, 0, 0, 6)],
    "y": [(0, 0, 2, 3), (2, 3, 4, 6), (2, 3, 2, 6)],
    "z": [(0, 0, 4, 0), (4, 0, 0, 6), (0, 6, 4, 6)],
    "{": [(2, 0, 1, 1), (1, 1, 1, 2), (1, 2, 2, 3), (2, 3, 2, 4), (2, 4, 1, 5), (1, 5, 1, 6)],
    "|": [(2, 0, 2, 6)],
    "}": [(1, 0, 2, 1), (2, 1, 2, 2), (2, 2, 1, 3), (1, 3, 1, 4), (1, 4, 2, 5), (2, 5, 2, 6)],
    "~": [(0, 3, 1, 2), (1, 2, 2, 3), (2, 3, 3, 2), (3, 2, 4, 3)],
}


# Function to draw a digit
def draw_digit(digit, x, y, scale):
    lines = letterdata.get(digit, [])
    for line in lines:
        x1, y1, x2, y2 = line
        # TODO - hardcoded green color
        pygame.draw.line(screen, (0, 200, 0), (x + x1 * scale, y + y1 * scale), (x + x2 * scale, y + y2 * scale), 1)

# Function to draw a string
def draw_string(s, x, y, scale):
    for i, char in enumerate(s):
        draw_digit(char, x + i * 5 * scale, y, scale)








if __name__ == '__main__':
    # Define the window dimensions
    WINDOW_WIDTH = 800
    WINDOW_HEIGHT = 600

    # Define the colors
    BLACK = (0, 0, 0)
    WHITE = (255, 255, 255)
    GREEN = (0, 200, 0)

    # Define the scaling factor and animation direction
    sc = 3.0
    dir = 1

    # Initialize pygame
    pygame.init()

    # Constants
    WIDTH, HEIGHT = 800, 800

    # Create the screen
    screen = pygame.display.set_mode((WIDTH, HEIGHT))



    # Main loop
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

        # Clear the screen
        screen.fill(BLACK)

        sc += 0.1 * dir
        if sc > 10 or sc < 1:
            dir = -dir
        
        # draw_string(""" !"#$%&'()*+,-./0123456789:;<=>?@""", 10, 10, 3)
        # draw_string("""ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`""", 10, 80, 3)
        # draw_string("""abcdefghijklmnopqrstuvwxyz{|}~ """, 10, 150, 3)
        draw_string(" !"+chr(30)+"#$%&'()*+,-./", 400 - sc * 40, 200 - sc * 15, sc)
        draw_string("0123456789:;<=>?", 400 - sc * 40, 225 - sc * 10, sc)
        draw_string("@ABCDEFGHIJKLMNO", 400 - sc * 40, 250 - sc * 5, sc)
        draw_string("PQRSTUVWXYZ[\]^_", 400 - sc * 40, 275 + sc * 5, sc)
        draw_string("`abcdefghijklmno", 400 - sc * 40, 300 + sc * 10, sc)
        draw_string("pqrstuvwxyz{|}~", 400 - sc * 40, 325 + sc * 15, sc)

        pygame.display.flip()
        
        pygame.time.delay(16 + int(sc * 5))
